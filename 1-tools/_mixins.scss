// Breakpoint mixins
@mixin screen-xsmall() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-xsmall) {
    @content;
  }
}

@mixin screen-small() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-small) {
    @content;
  }
}

@mixin screen-medium() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-medium) {
    @content;
  }
}

@mixin screen-large() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-large) {
    @content;
  }
}

/* 
  Define width x height in one line
  @include dimensions(size(3), size(8));
*/
@mixin dimensions($width, $height) {
  width: $width;
  height: $height;
}

// Position an element vertically and horizontally central without knowing its width or height
@mixin absolute-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Used to generate utility classes for all colours
@mixin generate-colors($prefix, $property) {
  @each $name, $values in $color-loop-array {
    @if (length($values) > 1) {
      @each $key, $val in $values {
        &#{$prefix}-#{$name}-#{$key} {
          #{$property}: $val;
        }
      }
    } @else {
      &#{$prefix}-#{$name} {
        #{$property}: $values;
      }
    }
  }
}
