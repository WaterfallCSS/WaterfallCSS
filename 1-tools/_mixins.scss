// Breakpoint mixins
@mixin screen-xsmall() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-xsmall) {
    @content;
  }
}

@mixin screen-small() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-small) {
    @content;
  }
}

@mixin screen-medium() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-medium) {
    @content;
  }
}

@mixin screen-large() {
  @media all and (#{$media-query-prefix}-width: $breakpoint-large) {
    @content;
  }
}

/* 
  Define width x height in one line
  @include dimensions(size(3), size(8));
*/
@mixin dimensions($width, $height) {
  width: $width;
  height: $height;
}

// Position an element vertically and horizontally central without knowing its width or height
@mixin absolute-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Used to generate utility classes for all colours
@mixin generate-colors($prefix, $property) {
  @each $name, $values in $color-loop-array {
    @if (length($values) > 1) {
      @each $key, $val in $values {
        &#{$prefix}-#{$name}-#{$key} {
          #{$property}: $val;
        }
      }
    } @else {
      &#{$prefix}-#{$name} {
        #{$property}: $values;
      }
    }
  }
}

@mixin generate-headings($utility: false, $ratio: $heading-type-scale) {
  // Remove the following logic and hardcode the values below, if you wish.
  $h6: $body-font-size;
  $h5: $h6 * $ratio;
  $h4: $h5 * $ratio;
  $h3: $h4 * $ratio;
  $h2: $h3 * $ratio;
  $h1: $h2 * $ratio;

  $heading-font-sizes: (
    1: #{$h1}rem,
    2: #{$h2}rem,
    3: #{$h3}rem,
    4: #{$h4}rem,
    5: #{$h5}rem,
    6: #{$h6}rem
  );

  $prefix: '';

  @if ($utility) {
    $prefix: '&';
  }

  @for $i from 1 to 7 {
    #{$prefix}h#{$i} {
      font-size: map-get($heading-font-sizes, $i);

      @if ($utility == false) {
        @include screen-medium() {
          font-size: map-get($heading-font-sizes, $i + 1);
        }

        @include screen-small() {
          font-size: map-get($heading-font-sizes, $i + 2);
        }
      }
    }
  }
}

@mixin generate-paragraphs($utility: false) {
  // Remove the following logic and hardcode the values below, if you wish.
  $p: $body-font-size;
  $p-sm: $p / $content-type-scale;
  $p-xs: $p-sm / $content-type-scale;
  $p-xxs: $p-xs / $content-type-scale;

  $paragraph-font-sizes: (
    'p': #{$p}rem,
    'p-sm': #{$p-sm}rem,
    'p-xs': #{$p-xs}rem,
    'p-xxs': #{$p-xxs}rem
  );

  $prefix: '.';

  @if ($utility) {
    $prefix: '&';
  }

  @each $key, $value in $paragraph-font-sizes {
    #{$prefix}#{$key} {
      font-size: $value;

      @if ($utility == false) {
        @include screen-medium() {
          font-size: $value;
        }

        @include screen-small() {
          font-size: $value;
        }
      }
    }
  }
}
